name: "Formatting and linting"

on:
  push:
    branches:
      - master
      - main

jobs:
  format-lint:
    name: Lints and Fmt
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build: [ x86_64-windows ] # Handles both msvc and gnu
        include:
          - build: 86_64-pc-windows-msvc
            os: windows-latest
            repository: csv_parser_rs
            rust: nightly
            target: x86_64-pc-windows-msvc
            cross: false
          #          - build: 86_64-pc-windows-gnu
          #            repository: csv_parser_rs
          #            os: windows-latest
          #            rust: nightly
          #            target: x86_64-pc-windows-gnu
          #            cross: false

          - build: 86_64-pc-windows-msvc
            os: ubuntu-latest
            repository: csv_parser_rs
            rust: nightly
            target: x86_64-pc-windows-msvc
            cross: false

          - build: 86_64-pc-windows-gnu
            repository: csv_parser_rs
            os: ubuntu-latest
            rust: nightly
            target: x86_64-pc-windows-gnu
            cross: false
    steps:
      - name: Checkout sources
        uses: actions/checkout@master

      - name: Remove rust-toolchain.toml file
        run: rm rust-toolchain.toml

      - name: Setup Rust for {{ matrix.os }} using {{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          targets: x86_64-pc-windows-msvc, x86_64-pc-windows-gnu
          components: rustfmt, clippy, cargo, rustc-codegen-cranelift

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true

      - name: Run Rustfmt
        run: cargo fmt --all -- --check

      - name: Run Clippy with pedantic
        run: cargo clippy --all-targets --all-features -- -W clippy::pedantic

#  clippy_check:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        build: [ x86_64-windows ] # Handles both msvc and gnu
#        include:
#          - build: 86_64-pc-windows-msvc
#            os: windows-latest
#            repository: csv_parser_rs
#            rust: nightly
#            target: x86_64-pc-windows-msvc
#            cross: false
#          - build: 86_64-pc-windows-gnu
#            repository: csv_parser_rs
#            os: windows-latest
#            rust: nightly
#            target: x86_64-pc-windows-gnu
#            cross: false
#
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@master
#
#      - name: Remove rust-toolchain.toml file
#        run: rm rust-toolchain.toml
#
#      - name: Setup Rust for {{ matrix.os }} using {{ matrix.rust }} toolchain
#        uses: dtolnay/rust-toolchain@nightly
#        with:
#          toolchain: nightly
#          targets: x86_64-pc-windows-msvc, x86_64-pc-windows-gnu
#          components: rustfmt, clippy, cargo, rustc-codegen-cranelift
#
#      - name: Cache Cargo dependencies
#        uses: Swatinem/rust-cache@v2
#        with:
#          cache-all-crates: true
#
#      - name: Run Cargo clippy (MSVC)
#        run: cargo clippy --target x86_64-pc-windows-msvc --all-features -- -W clippy::pedantic -D warnings
#
#      - name: Run Cargo clippy (GNU)
#        run: cargo clippy --target x86_64-pc-windows-gnu --all-features -- -W clippy::pedantic -D warnings